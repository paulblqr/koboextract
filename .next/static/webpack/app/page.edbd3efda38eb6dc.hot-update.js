"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/app/helpers/helpers.ts":
/*!************************************!*\
  !*** ./src/app/helpers/helpers.ts ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertAnnotToXml: function() { return /* binding */ convertAnnotToXml; },\n/* harmony export */   convertFile: function() { return /* binding */ convertFile; }\n/* harmony export */ });\nconst convertAnnotToXml = (file)=>{\n    return new Promise((resolve, reject)=>{\n        const reader = new FileReader();\n        reader.onload = (event)=>{\n            const content = event.target.result;\n            const xmlContent = \"<annotation>\".concat(content, \"</annotation>\");\n            resolve(xmlContent);\n        };\n        reader.onerror = (error)=>reject(error);\n        reader.readAsText(file);\n    });\n};\nconst convertFile = async (file)=>{\n    const xmlContent = await convertAnnotToXml(file);\n    parseString(xmlContent, function(err, result) {\n        return result.annotation.annotationSet[0].annotation;\n    });\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvaGVscGVycy9oZWxwZXJzLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQU8sTUFBTUEsb0JBQW9CLENBQUNDO0lBQ2hDLE9BQU8sSUFBSUMsUUFBUSxDQUFDQyxTQUFTQztRQUMzQixNQUFNQyxTQUFTLElBQUlDO1FBQ25CRCxPQUFPRSxNQUFNLEdBQUcsQ0FBQ0M7WUFDZixNQUFNQyxVQUFVRCxNQUFNRSxNQUFNLENBQUNDLE1BQU07WUFDbkMsTUFBTUMsYUFBYSxlQUF1QixPQUFSSCxTQUFRO1lBQzFDTixRQUFRUztRQUNWO1FBQ0FQLE9BQU9RLE9BQU8sR0FBRyxDQUFDQyxRQUFVVixPQUFPVTtRQUNuQ1QsT0FBT1UsVUFBVSxDQUFDZDtJQUNwQjtBQUNGLEVBQUU7QUFFSyxNQUFNZSxjQUFjLE9BQU9mO0lBQ2hDLE1BQU1XLGFBQWEsTUFBTVosa0JBQWtCQztJQUUzQ2dCLFlBQVlMLFlBQVksU0FBVU0sR0FBRyxFQUFFUCxNQUFNO1FBQzNDLE9BQU9BLE9BQU9RLFVBQVUsQ0FBQ0MsYUFBYSxDQUFDLEVBQUUsQ0FBQ0QsVUFBVTtJQUN0RDtBQUNGLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2FwcC9oZWxwZXJzL2hlbHBlcnMudHM/YjljNyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgY29udmVydEFubm90VG9YbWwgPSAoZmlsZTogRmlsZSkgPT4ge1xuICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7XG4gICAgcmVhZGVyLm9ubG9hZCA9IChldmVudCkgPT4ge1xuICAgICAgY29uc3QgY29udGVudCA9IGV2ZW50LnRhcmdldC5yZXN1bHQ7XG4gICAgICBjb25zdCB4bWxDb250ZW50ID0gYDxhbm5vdGF0aW9uPiR7Y29udGVudH08L2Fubm90YXRpb24+YDtcbiAgICAgIHJlc29sdmUoeG1sQ29udGVudCk7XG4gICAgfTtcbiAgICByZWFkZXIub25lcnJvciA9IChlcnJvcikgPT4gcmVqZWN0KGVycm9yKTtcbiAgICByZWFkZXIucmVhZEFzVGV4dChmaWxlKTtcbiAgfSk7XG59O1xuXG5leHBvcnQgY29uc3QgY29udmVydEZpbGUgPSBhc3luYyAoZmlsZTogRmlsZSkgPT4ge1xuICBjb25zdCB4bWxDb250ZW50ID0gYXdhaXQgY29udmVydEFubm90VG9YbWwoZmlsZSk7XG5cbiAgcGFyc2VTdHJpbmcoeG1sQ29udGVudCwgZnVuY3Rpb24gKGVyciwgcmVzdWx0KSB7XG4gICAgcmV0dXJuIHJlc3VsdC5hbm5vdGF0aW9uLmFubm90YXRpb25TZXRbMF0uYW5ub3RhdGlvbjtcbiAgfSk7XG59O1xuIl0sIm5hbWVzIjpbImNvbnZlcnRBbm5vdFRvWG1sIiwiZmlsZSIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwicmVhZGVyIiwiRmlsZVJlYWRlciIsIm9ubG9hZCIsImV2ZW50IiwiY29udGVudCIsInRhcmdldCIsInJlc3VsdCIsInhtbENvbnRlbnQiLCJvbmVycm9yIiwiZXJyb3IiLCJyZWFkQXNUZXh0IiwiY29udmVydEZpbGUiLCJwYXJzZVN0cmluZyIsImVyciIsImFubm90YXRpb24iLCJhbm5vdGF0aW9uU2V0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/helpers/helpers.ts\n"));

/***/ })

});